/*
Plural format:
"string_key": {
	"0": "This sentence will be used if the number being checked is 0",
	"1": "This sentence will be used if the number being checked is 1",
	"default": "This sentence will be used if none of the other sentences match"
}
Any number (or really, any value) can be used for the sub-keys.
The number against which the sub-keys is checked is called the plural variable in the comments.
If the plural variable matches a sub-key, the respective sentence will be used; otherwise, the sub-key called "default" will be used.
Sub-keys are always strings (i.e. wrapped in double-quotes).
*/

{
	// this is just a reminder to not name any top-level keys pl, because it's used for the pluralizer function
	"pl": null,

	/* Strings used in the DM forwarding module */
	"dm": {
		// sent in response to DMs, to notify users that their message has been forwarded
		"message_forwarded": "Your message has been forwarded to the bot developer.",
		// sent preceding forwarded DMs
		//   %1$s: the username of the user who sent the DM being forwarded
		"from": "DM from %1$s:",
	},

	/* Strings used when an error happens */
	"error": {
		// Sent to the bot owner when a fatal error occurs
		"bot_crashed": "Bot crashed!",
		// Sent when a user isn't allowed to use a command because they're missing one or more permissions
		//   %1$s: name or names of the permissions that are missing
		//   Plural variable: number of permissions
		"missing_user_permission": {
			"1": "You may not use this command because you are missing the following required permission: `%1$s`",
			"default": "You may not use this command because you are missing the following required permissions: `%1$s`"
		},
		// Sent when the command can't be used because the bot is missing one or more permissions
		//   %1$s: name or names of the permissions that are missing
		//   Plural variable: number of permissions
		"missing_bot_permission": {
			"1": "This command cannot be used because Yot is missing the following required permission: `%1$s`",
			"default": "This command cannot be used because Yot is missing the following required permissions: `%1$s`"
		},
		// Sent when the server admins have disabled a command in the server
		//   %1$s: name of the command
		"command_disabled": "`%1$s` has been disabled in this server.",
		// Sent when the supplied user argument isn't a valid user
		//   %1$s: the text that the command user input
		"user_not_found": "User %1$s not found.",
		// Sent when the supplied user is a bot, and therefore cannot be warned
		//   %1$s: username
		"bot_cannot_have_warn": "User %1$s cannot have warnings because it is a bot.",
		// Sent when a fatal issue happens, for example if the banning of a user fails
		"report_error": "Please report this error to the bot developer by sending Yot a direct message.",
		// Used as the reason when a user is warned for advertising
		"advertising_not_allowed": "Advertising is not allowed on this server!",

		// Sent when a user can't be warned for some reason
		//   %1$s: username
		//   %2$s: another sentence that describes the reason that the user can't be warned
		"warn_fail": "%1$s could not be warned: %2$s.",
		// See error.warn_fail, but for when the warning is due to an automated action
		"auto_warn_fail": "%1$s could not be automatically warned: %2$s.",
		// Sent when a user can't be kicked for reaching a specific warning level for some reason
		//   %1$s: username
		//   %2$d: number of warnings
		//   %3$s: another sentence that describes the reason that the user can't be kicked
		//   Plural variable: number of warnings
		"kick_warn_fail": {
			"1": "%1$s could not be kicked for reaching %2$d warning: %3$s.",
			"default": "%1$s could not be kicked for reaching %2$d warnings: %3$s."
		},
		// See error.kick_warn_fail, but for when the kick is due to an automated action
		"kick_auto_warn_fail": {
			"1": "%1$s could not be kicked for automatically reaching %2$d warning: %3$s.",
			"default": "%1$s could not be kicked for automatically reaching %2$d warnings: %3$s."
		},
		// See error.kick_warn_fail, but for a ban instead of a kick
		"ban_warn_fail": {
			"1": "%1$s could not be banned for reaching %2$d warning: %3$s.",
			"default": "%1$s could not be banned for reaching %2$d warnings: %3$s."
		},
		// See error.kick_auto_warn_fail, but for a ban instead of a kick
		"ban_auto_warn_fail": {
			"1": "%1$s could not be banned for automatically reaching %2$d warning: %3$s.",
			"default": "%1$s could not be banned for automatically reaching %2$d warnings: %3$s."
		},

		/*
		  All of the messages in this section are used as reasons in the above section of errors.
		  When "them" or "they" is used, it refers to the user whose name was given earlier in the message.
		*/
		// Used when the bot can't do the action because it is missing a specific permission
		//   %1$s: name of the missing permission
		"missing_bot_permission_2": "Yot is missing the `%1$s` permission.",
		// Used when the user is not currently in the server
		"user_not_in_guild": "They are not in this server.",
		// Used when the bot can't affect the user because the bot isn't above them in the role hierarchy
		//   %1$s: ping of the bot's highest role
		//   $2$s: ping of the user's highest role
		"bot_below_user": "Yot's highest role (%1$s) is not higher than their highest role (%1$s).",
		// Used when the bot can't affect the user because they own the server
		"user_is_owner": "They are the server owner.",
		// Used when the bot can't affect the user because the user is a bot
		"user_is_bot": "They are a bot.",
		// Used when the user can't be unwarned because they don't have any warnings
		"user_no_warnings": "They have no warnings.",
		// Used when a required bot setting isn't set, so the command can't be used
		//   %1$s: the name of the setting
		"setting_not_set": "The `%1$s` setting is not set.",
		// Used when a required bot setting is set, but the object to which it refers (e.g. channel, role) is no longer visible to the bot
		//   %1$s: the name of the setting
		"setting_object_gone": "The object set as the `%1$s` setting has been removed or is no longer visible to Yot.",
		// Used when the bot can't affect the role because the bot isn't above the role in the role hierarchy
		//   %1$s: ping of the bot's highest role
		//   $2$s: ping of the role
		"bot_below_role": "Yot's highest role (%1$s) is not higher than %2$s.",
		// Used when the bot can't affect the user because they have a specific permission (usually administrator)
		//   %1$s: the name of the permission
		"user_has_permission": "They have the `%1$s` permission.",
	},

	/* Strings used for things related to the warn commands/modules */
	"warn": {
		// Used in the $warnings command to say how many warnings a user has
		//   %1$s: username
		//   %2$d: number of warnings
		//   Plural variable: number of warnings
		"user_has_n_warnings": {
			"0": "%1$s has no warnings.",
			"1": "%1$s has %2$d warning.",
			"default": "%1$s has %2$d warnings."
		},

		"try_refresh": "Does something seem wrong? Try %1$swarnings refresh",
		"refreshed_no_changes": "Successfully refreshed your warnings. No changes were made.",
		"refreshed_set_active": "Successfully refreshed your warnings. `is_active` was set to true.",
		"you_warned_auto": {
			"1": "You have been automatically warned in **%1$s**. You now have %2$d warning.",
			"default": "You have been automatically warned in **%1$s**. You now have %2$d warnings."
		},
		"user_warned_auto": {
			"1": "%1$s has been automatically warned. They now have %2$d warning.",
			"default": "%1$s has been automatically warned. They now have %2$d warnings."
		},
		"you_kicked_auto": {
			"1": "You have been kicked from **%1$s** for automatically reaching %2$d warning.",
			"default": "You have been kicked from **%1$s** for automatically reaching %2$d warnings."
		},
		"user_kicked_auto": {
			"1": "%1$s has been kicked for automatically reaching %2$d warning.",
			"default": "%1$s has been kicked for automatically reaching %2$d warnings."
		},
		"you_banned_auto": {
			"1": "You have been banned from **%1$s** for automatically reaching %2$d warning.",
			"default": "You have been banned from **%1$s** for automatically reaching %2$d warnings."
		},
		"user_banned_auto": {
			"1": "%1$s has been banned for automatically reaching %2$d warning.",
			"default": "%1$s has been banned for automatically reaching %2$d warnings."
		},
		// Sent to a user who had previously been warned, then left, and has now rejoined the server
		//   %1$s: name of the server
		//   %2$d: number of warnings
		//   Plural variable: number of warnings
		"you_rewarned": {
			"1": "Your warning has been given back in **%1$s**. You had %2$d warning before you left the server.",
			"default": "Your warnings have been given back in **%1$s**. You had %2$d warnings before you left the server."
		},
		// Sent in the public log channel when a user who had previously been warned, then left, rejoins the server
		//   %1$s: username
		//   %2$d: number of warnings
		//   Plural variable: number of warnings
		"user_rewarned": {
			"1": "%1$s's warning has been given back. They had %2$d warning before they left the server.",
			"default": "%1$s's warnings have been given back. They had %2$d warnings before they left the server."
		}
	},

	"mute": {

	},

	"g": {
		"category": "Category",
		"required_permissions": "Required permissions",
		"subcommands": "Subcommands",
		"usage": "Usage",
		"none": "None",
		"guild": "Guild",
		"not_applicable": "N/A",
		"yes": "yes",
		"no": "no",
		"message_edited": "Message edited",
		"message_deleted": "Message deleted",
		"old_content": "Old content",
		"new_content": "New content",
		"content": "Content",
		"author": "Author",
		"channel": "Channel",

		"usage_str": "Usage: `%1$s`",
		"guild_str": "Guild: %1$s (%2$s)",
		"reason_str": " (Reason: %1$s)",
		"responsible_user_str": "Responsible user: %1$s",
		"user_id": "User ID: %1$s",
	},

	// all messages in the suggestions channel are reacted to with these emotes for voting
	// in order: "I like this", "I don't care about this", "I don't like this"
	"suggestion_emotes": ["👍", "🤷", "👎"],

	/* Strings used for displaying times prettily */
	"time": {
		// example output using these strings:
		// 2 days, 5 hours, 1 minute
		// for all of these strings
		//   %1$s: number representing how many of the respective unit of time there are
		"second": {
			"1": "%1$s second",
			"default": "%1$s seconds"
		},
		"minute": {
			"1": "%1$s minute",
			"default": "%1$s minutes"
		},
		"hour": {
			"1": "%1$s hour",
			"default": "%1$s hours"
		},
		"day": {
			"1": "%1$s day",
			"default": "%1$s days"
		},
		"week": {
			"1": "%1$s week",
			"default": "%1$s weeks"
		},
		// this is used to separate time segments
		"concat": ", ",
		// time unit abbreviations, used wherever users have to give a length of time as input
		"abbrev": {
			"second": "s",
			"minute": "m",
			"hour": "h",
			"day": "d",
			"week": "w"
		}
	},

	/* Footers used for various embeds */
	"footer": {
		// Gives information about how to use commands
		"cmd_usage": "Angled brackets represent required arguments. Square brackets represent optional arguments. Do not include the brackets in the command. All values are case sensitive.",
		// Gives information about a user's warning entry
		//   %1$s: a time string made using the time lang object - the amount of time until one warning is removed from the user
		//   %2$s: a number of warnings, or g.not_applicable - how many more warnings it will take for the user to be kicked from the server
		//   %3$s: a number of warnings, or g.not_applicable - how many more warnings it will take for the user to be banned from the server
		//   %4$s: g.yes or g.no - whether or not the user is currently in the server, and therefore if the warning time is decreasing
		"warn_info": "Time until a warning is removed: %1$s\nWarnings until kick: %2$s\nWarnings until ban: %3$s\nActive: %4$s",
		// Gives information about a user's mute
		//   %1$s: a time string made using the time lang object - the amount of time until the user is unmuted
		//   %2$s: a time string made using the time lang object - the initial length of the mute
		//   %3$s: g.yes or g.no - whether or not the user is currently in the server, and therefore if the mute time is decreasing
		"mute_info": "Time until unmute: %1$s\nDuration: %2$s\nActive: %3$s",
	},

	/* Names of the command categories (used in the help menu) */
	"categories": {
		".Owner": ".Owner",
		"Config": "Config",
		"Fun": "Fun",
		"Info": "Info",
		"Moderation": "Moderation",
		"Utility": "Utility",
	},

	/* Descriptions and usages for all commands */
	"commands": {
		/*
		"template": {
			"description": "text",
			"usage": "text"
		},
		*/
		"warnings": {
			"description": "Show how many warnings you have, or how many someone else has.",
			"usage": "[ping or id]"
		},
		"warnings refresh": {
			"description": "Use this command if something seems wrong with your warnings, such as being marked as inactive even when you're in the server.",
			"usage": ""
		},
	},

	/* Descriptions for all modules */
	"modules": {
		/*
		"template": {
			"description": "text"
		},
		*/
		"message-edit-logger": {
			"description": "Logs edited messages in the staff log channel."
		},
		"message-delete-logger": {
			"description": "Logs deleted messages in the staff log channel."
		},
		"persistent-roles-leave": {
			"description": "Caches persistent roles when users leave."
		},
		"mute-manager-leave": {
			"description": "Sets is_active to 0 when users with mutes leave."
		},
		"warning-manager-leave": {
			"description": "Sets is_active to 0 when users with warnings leave."
		},
		"youtube-anti-ad": {
			"description": "Deletes messages containing YouTube video links in which the video uploader's name matches the user's, and warns the users who posted them. A role ignored by this module may be set using the `advertising_allowed_role` setting."
		},
		"suggestions-channel": {
			"description": "Adds voting reactions to messages sent in the server's suggestions channel, if set."
		},
		"discord-anti-ad": {
			"description": "Deletes messages containing Discord invite links and warns the users who posted them. A role ignored by this module may be set using the `advertising_allowed_role` setting. Discord invite links leading to the current server will be ignored, as will invalid invites."
		},
		"warning-manager-join": {
			"description": "Sets is_active to 1 and resets end_timestamp when users with warnings rejoin."
		},
		"mute-manager-join": {
			"description": "Sets is_active to 1, gives back muted role, and resets end_timestamp when users with mutes rejoin."
		},
	}
}